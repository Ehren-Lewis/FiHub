echo "# FiHub" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/Ehren-Lewis/FiHub.git
git push -u origin main


6 people. Assigning all of the different roles.

There are 2 main sections

Then, there are 3 main categories

Crypto Currency:
    CSS style
    DOM manipulation with JS
    JS API call

Stocks:
    CSS style
    DOM manipulation with JS
    JS API call

The goal is that the API calls will be dynamic.

There is the possibility to limit query results, or it can be a function to let the user
    pick their query size.

The index.html should be statically created and can be a good wire frame for the classes
    and styling used for the stock and crypto currency htmls.

The stock/crypto.html should be created dynamically to allow for precise
    sizing of the API success information.

Optional feature: using window.replace() as a way to handle 404 requests, or perhaps modals.

Don't forget about media / col-md for example.


CSS styling:
    The goal of the stylers is to create an enjoyable user experience when viewing the page.
    Tables can be a valuable element when creating the data.
    Compose the general and individual stylig for each page
    Stylers should know how the manipulators plan to dynamically create elements 
    as well as how the callers will try and format the data.


DOM manipulation:
    The goal of the maninpulators is to be the middle man between the backend and the frontend.
    Manipulators should know how the sylers plan to id the elements to know what to append to,
    as well as where the information is stored that the callers have created.
    
Caller:
    The goal of the callers is to get the API data from the respective APIs, handle all 
    HTTP errors (200 vs 400), as well as manipulate the data so only the information needed
    is supplied. Should know the ids the stylers provide, as well as how to provide the data
    to the manipulators.


As stated, there will be one styler, one manipulator, and one caller per APi call.

As in agile methodology, developers typcially program by themselves and then meet up to
    relate the information. If desired, stylers can work with each other to have a common design
    consensus, manipulators can work together to mainpulate the DOM (ex. JS vs JQuery), and callers
    can work together to make sure they wrangle the needed data.

Possible crypto APIS:
    https://docs.cloud.coinbase.com/exchange/docs#api
        contains: Bitcoin, Bitcoin Cash, Litecoin and Ethereum Prices

    https://min-api.cryptocompare.com/
        contains: Cryptocurrencies Comparison

    https://documenter.getpostman.com/view/5734027/RzZ6Hzr3?version=latest  
        CoinStats is the name
        contains: Crypto Tracker
    
    https://developers.coinranking.com/api/documentation
        contains: Live Cryptocurrency data	


Possible stock APIS: 
    https://www.alphavantage.co/documentation/
        contains: Realtime and historical stock data
    
    https://finage.co.uk/
        contains: stock, currency, cryptocurrency, indices, and ETFs real-time & historical data provider
    
    https://www.stockdata.org/
        contains: Real-Time, Intraday & Historical Market Data, News and Sentiment API

    https://twelvedata.com/
        contains: Stock market data (real-time & historical)


